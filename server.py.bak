# -*- encoding: utf-8 -*-
"""
@File    :   chat.py
@Time    :   2021/10/23 21:12:03
@Author  :   Wicos 
@Version :   1.0
@Contact :   wicos@wicos.cn
@Blog    :   https://www.wicos.me
"""


# here put the import lib
from threading import Thread
from queue import Queue
import asyncio
from websockets import serve
import json
import schedule


class CHAT():
    def __init__(self):
        super(CHAT, self).__init__()
        self.daemon = True
        self.USER = set()
        self.MESSAGE = []

    def login(self,ws,uid):
        self.USER.add(uid)
        self.MESSAGE.append(ws)

    def logout(self, ws,uid):
        if uid in self.USER:
            self.USER.remove(uid)
        else:
            ws.close()
            
    def recv_msg(self, ws):
        recvmsg = json.loads(ws.recv())
        uid = recvmsg["uid"]
        status = recvmsg["status"]
        if status == "login":
            self.login(uid)
        elif status == "logout":
            self.logout(ws,uid)
        else:
            self.MESSAGE.append(ws)

    async def main_fun(self, websocket, path):
        # async for message in websocket:
        #     await websocket.send(message)
        self.recv_msg(websocket)

    async def main_loop(self):
        async with serve(self.main_fun, "localhost", 4456):
            await asyncio.Future()  # run forever

    def loop_fun(self):
        user_to = ""
        for ws in self.MESSAGE:
            data_1 = json.loads(ws.recv())
            user_to = data_1["to"]
            if data_1["uid"] in self.USER:
                for wss in self.MESSAGE:
                    data_2 = json.loads(wss.recv())
                    if data_2["from"] == user_to:
                        wss.send(data_1["data"])
            else:
                pass
                
    def loop_main(self):
        while True:
            schedule.every(1).seconds.do(self.loop_fun)

    def run(self):
        print("start chat server")
        Thread(target=self.loop_main).start()
        asyncio.run(self.main_loop())

if __name__ == "__main__":
    chat = CHAT()
    chat.run()